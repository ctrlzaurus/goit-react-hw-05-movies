{"version":3,"file":"static/js/944.dcedbc41.chunk.js","mappings":"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","sources":["api/movied-service.js","webpack://goit-react-hw-05-movies/./src/components/button/button.module.css?a294","components/button/Button.jsx","webpack://goit-react-hw-05-movies/./src/components/movieInfo/movieInfo.module.css?f7e0","components/movieInfo/MovieInfo.jsx","components/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '8ea045b96646bcab5dbf8f19b575f601';\n\nexport const getTrandingMovies = () => {\n    return axios\n        .get('/trending/movie/day', {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        .then(res => res.data);\n}\nexport const getMoviesDetails = (id) => {\n    return axios\n        .get('/movie/' + id, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        .then(res => res.data);\n}\nexport const getMovieCast = (id) => {\n    return axios\n        .get(`/movie/${id}/credits`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        .then(res => res.data);\n}\nexport const getMovieReview = (id) => {\n    return axios\n        .get(`/movie/${id}/reviews`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        .then(res => res.data);\n}\nexport const getSearchMovies = (query) => {\n    return axios\n        .get('/search/movie', {\n            params: {\n                api_key: API_KEY,\n                query,\n            }\n        })\n        .then(res => res.data);\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__59NTc\"};","import { useNavigate, useLocation } from 'react-router-dom';\nimport d from './button.module.css';\n\nconst Button = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleGoBackBtnClick = () => {\n    const prevPageLoacation = location.state;\n    navigate(prevPageLoacation);\n  };\n\n  return (\n    <button onClick={handleGoBackBtnClick} className={d.btn}>\n      Go back\n    </button>\n  );\n};\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"movieInfo_infoContainer__JggEA\",\"infoList\":\"movieInfo_infoList__vuA+D\",\"poster\":\"movieInfo_poster__i6p0l\",\"link\":\"movieInfo_link__KKrMs\"};","import { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { useLocation, NavLink } from 'react-router-dom';\n\nimport d from './movieInfo.module.css';\n\nimport { getMoviesDetails } from '../../api/movied-service';\n\nconst getACtiveClass = ({ isActive }) => clsx(d.link, isActive && d.active);\n\nconst MovieInfo = () => {\n\n    const [movieInfo, setMovieInfo] = useState({});\n\n    const {\n        poster_path,\n        title,\n        release_date,\n        vote_average,\n        overview,\n        genres = [],\n    } = movieInfo;\n\n    const location = useLocation();\n    const str = location.pathname;\n    const parts = str.split('/');\n\n    let id = 0;\n    if (\n        parts[parts.length - 1] === 'cast' ||\n        parts[parts.length - 1] === 'reviews'\n    ) {\n        id = parts[parts.length - 2];\n    } else {\n        id = parts[parts.length - 1];\n    }\n\n    useEffect(() => {\n        getMoviesDetails(id).then(r => setMovieInfo(r));\n    }, [id])\n\n  return (\n    <>\n        {poster_path && (\n            <div className={d.infoContainer}>\n                <div className={d.posterP}>\n                    <img\n                        src={'https://image.tmdb.org/t/p/original' + poster_path}\n                        className={d.poster}\n                        alt=\"\"\n                    />\n                </div>\n                <div className={d.infoP}>\n                    <h1 className={d.infoMainTitle}>{title} ({parseInt(release_date)})</h1>\n                    <p className={d.infoDescription}>User score: {vote_average}</p>\n                    <h2 className={d.infoTitle}>Overview</h2>\n                    <p className={d.infoDescription}>{overview}</p>\n                    <h2 className={d.infoTitle}>Genres</h2>\n                    <ul className={d.infoList}>\n                        {genres.map(({ name, id }) => (\n                            <li \n                                key={id} \n                                className={d.infoItem}>\n                                {name}\n                            </li>\n                        ))}\n                    </ul>\n                    <button className={d.infoBtn}>\n                        <NavLink\n                            className={getACtiveClass}\n                            state={location.state}\n                            to=\"cast\"\n                        >\n                            Cast\n                        </NavLink>\n                    </button>\n                    <button className={d.infoBtn}>\n                        <NavLink\n                            className={getACtiveClass}\n                            state={location.state}\n                            to=\"reviews\"\n                        >\n                            Reviews\n                        </NavLink>\n                    </button>\n                </div>\n            </div>\n        )}\n    </>\n  );\n};\n\nexport default MovieInfo;\n","import { Outlet } from 'react-router-dom';\n\nimport MovieInfo from '../movieInfo/MovieInfo';\nimport Button from '../button/Button';\n\nconst MovieDetails = () => {\n\n  return (\n    <>\n      <Button />\n      <MovieInfo />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrandingMovies","params","api_key","then","res","data","getMoviesDetails","id","getMovieCast","getMovieReview","getSearchMovies","query","navigate","useNavigate","location","useLocation","onClick","prevPageLoacation","state","className","d","getACtiveClass","isActive","clsx","useState","movieInfo","setMovieInfo","poster_path","title","release_date","vote_average","overview","genres","parts","pathname","split","length","useEffect","r","src","alt","parseInt","map","name","to","Button"],"sourceRoot":""}